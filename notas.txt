links adc
https://github.com/afiskon/stm32-adc-dac/tree/master/Src

Lista ToDo: 
etapa de robot 2.0
	se espera que el vehiculo este listo para operar y los nodos de control basicos
	se encuentren en su punto de operacion
	
	-servidor de teleoperacion basico                 OK
	-ventilador 5v jetson	                          OK
	-conector xt60 bateria interna                    OK
	-conector xt60 de carga para bateria              OK
	-housing para bateria                             OK
	-ploga con falso contacto                         OK
	-superestructura mejorada facil acceso            OK
	-suspension reforzada                             OK
	-ordenamiento de cableado                         OK
	-checador de bateria y sensores                   OK
	-protector de policarbonato de 6mm                OK
	-polea con liga para Lidar                        OK
	
	-ambiente de ROS                                  OK
	-GPS y nodo                                       OK
	-pruebas basicas con kinect
	-pruebas basicas lidar                            OK
	-encoders hmc5883l, medicion de bateria y nodo    OK

etapa de robot 3.0
	se esperan mejoras adicionales y las primeras pruebas con AI

	-unidad inercial de navegacion
	-AI
	-lamparas
	-SSD externo


cambiar powermode a 10 watts

sudo /usr/sbin/nvpmodel -m 0
https://www.waveshare.com/wiki/Install_ROS_System_on_Jetson_Nano_%26_Environment_Cofiguration

lista de dispositivos serial
lsusb
ls -la /dev/ttyACM*

#ejecutar NEATO xv11

primero seteamos el modo distribuido, esto es, la raspberry correra ROS y
la pc windows se conectara
EN LA RASPERRY O JETSON
export ROS_IP="IP DEL DISPOSITIVO CON LIDAR"
export ROS_MASTER_URI="http://IP DEL DISPOSITIVO CON LIDAR:11311"

EN LA MAQUINA WINDOWS, correr el ejecutable ROS.exe
export ROS_IP=IP DE WINDOWS SIN COMILLAS
!!!!SIN COMILLAS!!!!!!
export ROS_MASTER_URI=http://IP DEL DISPOSITIVO CON LIDAR:11311

EN LA RASPBERRY O JETSON
roscore &
ir al directorio con catkin_ws, en mi caso:
cd ~/JetbotTank/ROS/catkin_ws
agregar los sources para reconocer los nodos actuales
source ./devel/setup.bash
ejecutar el comando de los nodos, en mi caso es este:
y el lidar se encuentra en el puerto /dev/ttyACM1
rosrun xv11_lidarDriver neato_laser_publisher _port:=/dev/ttyACM1 _firmware_version:=2

EN LA MAQUINA WINDOWS
ejecutamos el ambiente rviz
rviz
una vez abierta la interfaz, click en el boton Add (esquina inferior izquierda)
seleccionar la opcion By Display type (esquina superior izquierda del menu que se acaba de abrir)
seleccionar la opcion LaserScan y dar ok
en el nuevo tema de LaserScan que aparecio en la barra lateral izquierda seleccionar en Topic /scan
en la opcion Size, cambiar el valor a 0.05
y en la opcion Fixed Frame de Global Options cambiar map por neato_laser
el mapa debe trazarse de inmediato

###########################

#comandos de ros usados hasta el momento
printenv | grep ROS                 #imprime las variables de entornon de ROS
#inicializar variables
source /opt/ros/kinetic/setup.bash

Para construir un proyecto existente se utiliza el comando catkin_make

si el directorio ya contiene un subdirectorio src, colocara un CMakeLists.txt en ./src


############### PARA CREAR UN ENTORNO DE  catkin

----------------setear el workspace
http://wiki.ros.org/catkin/Tutorials/create_a_workspace
----------------construir un paquete nuevo TENIENDO YA UN WORKSPACE
http://wiki.ros.org/catkin/Tutorials/CreatingPackage
ejemplo de estructura esperada
workspace_folder/        -- WORKSPACE
  src/                   -- SOURCE SPACE
    CMakeLists.txt       -- 'Toplevel' CMake file, provided by catkin
    package_1/
      CMakeLists.txt     -- CMakeLists.txt file for package_1
      package.xml        -- Package manifest for package_1
    ...
    package_n/
      CMakeLists.txt     -- CMakeLists.txt file for package_n
      package.xml        -- Package manifest for package_n

catkin_create_pkg [name] [dependence1] [dependence2] ...
ejemplo
catkin_create_pkg beginner_tutorials std_msgs rospy roscpp      

despues construir el workspace en el directorio base del workspace de catkin y agregar al entorno
catkin_make
. path/to/current/devel/setup.bash

roscd beginner_tutorials
source ./devel/setup.bash

algunos paquetes externos se tienen que instalar, por ejemplo
sudo apt-get install ros-melodic-serial


########### para correr ros

roscore                 inicia el sistema
rosnode list            lista los nodos actuales del sistema
rostopic list -v        lista los topics actuales
rostopic echo /scan     muestra los mensajes en el topic /scan

rosnode [package_name] [node_name]  ejecuta un nodo y le asigna un nombre
por ejemplo rosrun turtlesim turtlesim_node

######## para ver una grafica con los nodos actuales instalar: <distro> = melodic
$ sudo apt-get install ros-<distro>-rqt
$ sudo apt-get install ros-<distro>-rqt-common-plugins

rosrun rqt_graph rqt_grap

###### desplegar la informacion de un topic
rostopic echo /turtle/cmdvel

########## para correr un nodo que se ha creado, ir a la carpeta donde se ejecuto catkin_make
source ./devel/setup.bash


